name: .NET

on:
  pull_request:
    branches: [ "master", "dev" ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/dotnet-build.yml'
      - '.github/workflows/purge-report.yml'
      - '*.sln'
      - '*.props'
  workflow_dispatch:

jobs:
  build:
    name: 🛠️ Build & 🧐 Test
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.create-cache-key.outputs.key }}
    permissions:
      packages: read
    
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Create cache key
        id: create-cache-key
        run: |
          echo key=${{ runner.os }}-${{ hashFiles('src/**', 'tests/**') }}-test-results >> "$GITHUB_OUTPUT"

      - name: Cache testing results
        id: cache-tests
        uses: actions/cache@v3
        with:
          path: ./allure-results
          key: ${{ steps.create-cache-key.outputs.key }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        if: steps.cache-tests.outputs.cache-hit != 'true'
        with:
          dotnet-version: 8.0.302

      - name: Cache nuget packages
        uses: actions/cache@v3
        if: steps.cache-tests.outputs.cache-hit != 'true'
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/*.Packages.props', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        if: steps.cache-tests.outputs.cache-hit != 'true'
        run: dotnet restore VyazmaTech.sln

      - name: Build
        if: steps.cache-tests.outputs.cache-hit != 'true'
        run: dotnet build VyazmaTech.sln -c Release --no-restore

      - name: Test
        if: steps.cache-tests.outputs.cache-hit != 'true'
        run: dotnet test VyazmaTech.sln -c Release --no-restore --no-build -l trx --results-directory ./allure-results
  
  compile-allure:
    name: 🔃 Compile allure pages
    runs-on: ubuntu-latest
    permissions: write-all
    concurrency: allure
    if: always()
    needs: build
    
    steps:
      - name: Cache testing results
        id: cache-tests
        uses: actions/cache@v3
        with:
          path: ./allure-results
          key: ${{ needs.build.outputs.cache-key }}

      - name: Download history
        uses: actions/download-artifact@v3
        with:
          name: allure-history
          path: "${{ github.workspace }}/allure-history"
        continue-on-error: true

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history
          subfolder: ${{ github.event.number }}
          keep_reports: 20

      - name: Store history
        uses: actions/upload-artifact@v3
        with:
          name: allure-history
          path: "${{ github.workspace }}/allure-history"

      - name: Upload GitHub Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v1.0.8
        with:
          path: "${{ github.workspace }}/allure-history"

#  deploy-pages:
#    name: 🚀 Deploy test summary on github pages
#    runs-on: ubuntu-latest
#    permissions:
#      pages: write
#      deployments: write
#      pull-requests: write
#      id-token: write
#    needs: compile-allure
#    
#    environment:
#      name: github-pages
#      url: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.event.number }}/${{ github.run_number }}
#    
#    steps:
#      - name: Deploy Allure reports to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v2.0.1
#
#      - name: Post allure test run link
#        uses: mshick/add-pr-comment@v2
#        with:
#          message: |
#            Link to allure test run:  
#            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.event.number }}/${{ github.run_number }}